#ifndef OUTPOSTS_H
#define OUTPOSTS_H

#include "eval.h"


//various OUTPOSTS PSQT are defined here

/**
 * @brief [color][sqv] 
 */ 
const int BISHOP_OUTPOST [2][64] = {
    [WHITE] = {gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
               gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
               gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
               gS( 0,  0),  gS( 0,  0),  gS( 2,  0),  gS( 4,  0),  gS( 4,  0),  gS( 2,  0),  gS( 0,  0),  gS( 0,  0),
               gS( 2,  0),  gS( 2,  0),  gS( 7,  0),  gS(11,  0),  gS(11,  0),  gS( 6,  0),  gS( 2,  0),  gS( 2,  0),
               gS( 7,  0),  gS( 6,  0),  gS(11,  0),  gS(13,  0),  gS(13,  0),  gS(11,  0),  gS( 6,  0),  gS( 7,  0),
               gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
               gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
               },

    [BLACK] = { gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
                gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
                gS( 7,  0),  gS( 6,  0),  gS(11,  0),  gS(13,  0),  gS(13,  0),  gS(11,  0),  gS( 6,  0),  gS( 7,  0),
                gS( 2,  0),  gS( 2,  0),  gS( 7,  0),  gS(11,  0),  gS(11,  0),  gS( 6,  0),  gS( 2,  0),  gS( 2,  0),
                gS( 0,  0),  gS( 0,  0),  gS( 2,  0),  gS( 4,  0),  gS( 4,  0),  gS( 2,  0),  gS( 0,  0),  gS( 0,  0),
                gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
                gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
                gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
                }
};

const int BISHOP_PROT_OUTPOST [2][64] = {
    [WHITE] = {gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
               gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
               gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
               gS( 0,  0),  gS( 0,  0),  gS( 5,  0),  gS( 7,  0),  gS( 7,  0),  gS( 5,  0),  gS( 0,  0),  gS( 0,  0),
               gS( 0,  0),  gS( 5,  0),  gS(10,  0),  gS(15,  0),  gS(15,  0),  gS(10,  0),  gS( 5,  0),  gS( 0,  0),
               gS( 0,  0),  gS(20,  0),  gS(15,  0),  gS(20,  0),  gS(20,  0),  gS(15,  0),  gS(10,  0),  gS( 0,  0),
               gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
               gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
               },

    [BLACK] = { gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
                gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
                gS( 0,  0),  gS(20,  0),  gS(15,  0),  gS(20,  0),  gS(20,  0),  gS(15,  0),  gS(10,  0),  gS( 0,  0),
                gS( 0,  0),  gS( 5,  0),  gS(10,  0),  gS(15,  0),  gS(15,  0),  gS(10,  0),  gS( 5,  0),  gS( 0,  0),
                gS( 0,  0),  gS( 0,  0),  gS( 5,  0),  gS( 7,  0),  gS( 7,  0),  gS( 5,  0),  gS( 0,  0),  gS( 0,  0),
                gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
                gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
                gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
                }
};

const int KNIGHT_OUTPOST [2][64] = {
    [WHITE] = {gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
               gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
               gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
               gS( 0,  0),  gS( 0,  0),  gS( 2,  0),  gS( 4,  0),  gS( 4,  0),  gS( 2,  0),  gS( 0,  0),  gS( 0,  0),
               gS( 0,  0),  gS( 2,  0),  gS( 9,  0),  gS(11,  0),  gS(11,  0),  gS( 9,  0),  gS( 2,  0),  gS( 0,  0),
               gS( 7,  0),  gS( 9,  0),  gS(15,  0),  gS(15,  0),  gS(15,  0),  gS(15,  0),  gS( 9,  0),  gS( 7,  0),
               gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
               gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
               },

    [BLACK] = { gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
                gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
                gS( 7,  0),  gS( 9,  0),  gS(15,  0),  gS(15,  0),  gS(15,  0),  gS(15,  0),  gS( 9,  0),  gS( 7,  0),
                gS( 0,  0),  gS( 2,  0),  gS( 9,  0),  gS(11,  0),  gS(11,  0),  gS( 9,  0),  gS( 2,  0),  gS( 0,  0),
                gS( 0,  0),  gS( 0,  0),  gS( 2,  0),  gS( 4,  0),  gS( 4,  0),  gS( 2,  0),  gS( 0,  0),  gS( 0,  0),
                gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
                gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
                gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
                }
};


const int KNIGHT_PROT_OUTPOST [2][64] = {
    [WHITE] = {gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
               gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
               gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
               gS( 0,  0),  gS( 0,  0),  gS( 4,  0),  gS( 7,  0),  gS( 7,  0),  gS( 4,  0),  gS( 0,  0),  gS( 0,  0),
               gS( 3,  0),  gS( 5,  0),  gS(11,  0),  gS(15,  0),  gS(15,  0),  gS(11,  0),  gS( 5,  0),  gS( 3,  0),
               gS(11,  0),  gS(12,  0),  gS(19,  0),  gS(23,  0),  gS(23,  0),  gS(19,  0),  gS(12,  0),  gS(11,  0),
               gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
               gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
               },

    [BLACK] = { gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
                gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
                gS(11,  0),  gS(12,  0),  gS(19,  0),  gS(23,  0),  gS(23,  0),  gS(19,  0),  gS(12,  0),  gS(11,  0),
                gS( 3,  0),  gS( 5,  0),  gS(11,  0),  gS(15,  0),  gS(15,  0),  gS(11,  0),  gS( 5,  0),  gS( 3,  0),
                gS( 0,  0),  gS( 0,  0),  gS( 4,  0),  gS( 7,  0),  gS( 7,  0),  gS( 4,  0),  gS( 0,  0),  gS( 0,  0),
                gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
                gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
                gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),  gS( 0,  0),
                }
};






















#endif